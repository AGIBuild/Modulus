#!/usr/bin/env pwsh

# Pre-commit hook to validate AI manifest is present and valid
# To install: git config core.hooksPath .githooks

# Check if ai-manifest.yaml exists
if (-not (Test-Path "ai-manifest.yaml")) {
    Write-Host "Error: ai-manifest.yaml is missing in the root directory!" -ForegroundColor Red
    Write-Host "Please create the AI manifest file." -ForegroundColor Red
    exit 1
}

# Validate yaml syntax 
try {
    Get-Content "ai-manifest.yaml" | ConvertFrom-Yaml -ErrorAction Stop
    Write-Host "AI manifest validation passed!" -ForegroundColor Green
} 
catch {
    Write-Host "Error: ai-manifest.yaml contains invalid YAML syntax:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    exit 1
}

# Check for required sections
$manifest = Get-Content "ai-manifest.yaml" | ConvertFrom-Yaml

$requiredSections = @(
    "projectInfo",
    "architecture",
    "directoryStructure",
    "namingConventions",
    "roadmap",
    "glossary"
)

$missingSections = @()
foreach ($section in $requiredSections) {
    if (-not $manifest.ContainsKey($section)) {
        $missingSections += $section
    }
}

if ($missingSections.Count -gt 0) {
    Write-Host "Error: ai-manifest.yaml is missing required sections:" -ForegroundColor Red
    foreach ($section in $missingSections) {
        Write-Host "  - $section" -ForegroundColor Red
    }
    exit 1
}

# Additional checks for story documentation
$enStoryDir = "docs/en-US/stories"
$zhStoryDir = "docs/zh-CN/stories"

# Get list of English stories
if (Test-Path $enStoryDir) {
    $enStories = Get-ChildItem -Path $enStoryDir -Filter "S-*.md" | ForEach-Object { $_.Name }
} else {
    $enStories = @()
}

# Get list of Chinese stories
if (Test-Path $zhStoryDir) {
    $zhStories = Get-ChildItem -Path $zhStoryDir -Filter "S-*.md" | ForEach-Object { $_.Name }
} else {
    $zhStories = @()
}

# Find stories that don't have both language versions
$missingTranslations = @()

foreach ($story in $enStories) {
    if ($zhStories -notcontains $story) {
        $missingTranslations += "Chinese version of $story is missing"
    }
}

foreach ($story in $zhStories) {
    if ($enStories -notcontains $story) {
        $missingTranslations += "English version of $story is missing"
    }
}

if ($missingTranslations.Count -gt 0) {
    Write-Host "Error: The following translations are missing:" -ForegroundColor Red
    foreach ($missing in $missingTranslations) {
        Write-Host "  - $missing" -ForegroundColor Red
    }
    Write-Host "All stories must have both English and Chinese versions!" -ForegroundColor Red
    exit 1
}

exit 0
